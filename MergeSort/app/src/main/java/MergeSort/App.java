/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package MergeSort;

import java.util.Arrays;

public class App {
  public String getGreeting() {
    return "Hello World!";
  }

  public static void main(String[] args) {
    System.out.println(new App().getGreeting());
    int[] arr = {8, 4, 23, 42, 16, 15};
    mergeSort(arr);
    for (int i = 0; i < arr.length; i++) {
      System.out.println("i : " + arr[i]);
    }
  }

  public static int[] mergeSort(int[] arr) {
    int n = arr.length;

    if (n > 1) {
      int mid = n / 2;
      int[] left = Arrays.copyOfRange(arr, 0, mid);
      int[] right = Arrays.copyOfRange(arr, mid, arr.length);
      mergeSort(left);
      mergeSort(right);
      merge(left, right, arr);
    }
    return arr;

  }

  public static void merge(int[] left, int[] right, int[] arr) {
    //  ALGORITHM Merge(left, right, arr)
//  DECLARE i <-- 0
//  DECLARE j <-- 0
//  DECLARE k <-- 0
    int i = 0;
    int j = 0;
    int k = 0;
    //    while i < left.length && j < right.length
    while (i < left.length && j < right.length) {
      if (left[i] <= right[j]) {
        arr[k] = left[i];
        i = i + 1;
      } else {
        arr[k] = right[j];
        j = j + 1;
      }
//  k <-- k + 1
      k = k + 1;
    }
//    if i = left.length
    //  set remaining entries in arr to remaining values in right
//    else
//  set remaining entries in arr to remaining values in left
//
    if (i == left.length) {
      for (int rem = j; rem < right.length; rem++) {
        arr[k] = right[rem];
        k++;
      }
    } else {
      for (int rem = j; rem < left.length; rem++) {
        arr[k] = left[rem];
        k++;
      }
    }

  }
//      return arr;
}


